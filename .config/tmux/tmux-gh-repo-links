#!/usr/bin/env bash

cache_file="$HOME/.config/tmux/gh-repos-cache"
cache_duration=1209600  # 2 weeks in seconds

if [[ -f "$cache_file" && $(($(date +%s) - $(stat -f %m "$cache_file"))) -lt $cache_duration ]]; then
  repos=$(cat "$cache_file")
else
  repos=$(gh repo ls --limit 1000; gh api user/orgs --paginate -q '.[].login' | xargs -I {} gh repo ls {} --limit 1000)
  printf '%s\n' "$repos" > "$cache_file"
fi
repos_to_display=$(printf '%s\n' "$repos" | cut -d'/' -f2 | cut -d$'\t' -f1)
selected_basename=$(printf '%s\n' "$repos_to_display" | dynamic-fzf)

if [[ -z $selected_basename ]]; then
  exit 0
fi

full_repo=$(printf '%s\n' "$repos" | grep "/$selected_basename[[:space:]]" | cut -d$'\t' -f1)

link_options=("Actions" "PRs" "Releases" "Code")
selected_link=$(printf "%s\n" "${link_options[@]}" | dynamic-fzf)

if [[ -z $selected_link ]]; then
  exit 0
fi

gh_browse_section() {
    local repo="$1"
    local section="$2"

    gh browse --repo "$repo" --no-browser | sed "s|\$|/$section|" | xargs open
}

case $selected_link in
  Actions)
    gh_browse_section "$full_repo" "actions"
    ;;

  PRs)
    gh_browse_section "$full_repo" "pulls"
    ;;

  Releases)
    gh_browse_section "$full_repo" "releases"
    ;;

  Code)
    gh_browse_section "$full_repo" ""
    ;;

  *)
    echo -n "unknown"
    ;;
esac
